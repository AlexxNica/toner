[DEFAULT]
srs3 = +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over
srs4 = +proj=longlat +datum=WGS84
srs4326 = +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
srs900913 = +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs
srsmerc = +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs

[admin1_labels_10m_]
table = admin_1_states_provinces_10m
template = postgis_conn_1

[admin1_labels_50m_]
table = (SELECT *, SUBSTRING(hasc FROM 4) AS abbr FROM admin_1_states_provinces_50m) AS admin_1_states_provinces
template = postgis_conn_1

[admin1_labels_50m_z4]
table = admin_1_labels_z4
template = postgis_conn_2

[admin1_labels_50m_z5]
table = admin_1_labels_z5
template = postgis_conn_2

[admin1_labels_50m_z6]
table = admin_1_labels_z6
template = postgis_conn_2

[admin1_labels_50m_z7]
table = admin_1_labels_z7
template = postgis_conn_2

[admin1_lines_10m_]
table = admin_1_states_provinces_lines_10m
template = postgis_conn_1

[admin1_lines_110m_]
table = admin_1_states_provinces_lines_110m
template = postgis_conn_1

[admin1_lines_50m_]
table = admin_1_states_provinces_lines_50m
template = postgis_conn_1

[admin1_lines_osm_]
table = (SELECT way,
	                        name
	                 FROM planet_osm_polygon
	                 WHERE "boundary" IN ('administrative')
	                    AND "admin_level" IN ('4')
	                    AND "admin_level" NOT IN ('territorial_waters', 'territorial waters')
	                 ORDER BY z_order ASC
	                
	                ) AS water
template = postgis_conn_0

[aeroways_]
table = (SELECT way,
	                        name,
	                        aeroway
	                 FROM planet_osm_line
	                 WHERE aeroway IS NOT NULL
	                
	                ) AS aeroway
template = postgis_conn_0

[airports]
table = airports_simple_0d29_less_merc
template = postgis_conn_2

[buildings_]
table = (SELECT way, ST_Area(way) AS area FROM planet_osm_polygon WHERE building IS NOT NULL ORDER BY z_order ASC, way_area DESC) AS footprints
template = postgis_conn_0

[buildings_stamen_]
table = (SELECT way, 
	                        ST_Area(way) AS area, 
	                        osm_id
	                   FROM planet_osm_polygon
	                   WHERE building IS NOT NULL 
	                      AND osm_id in (45074542)
	                   ORDER BY z_order ASC, way_area DESC
	                 ) AS footprints
template = postgis_conn_0



[civic_areas_]
table = (SELECT way,
	                        name
	                 FROM planet_osm_polygon
	                 WHERE amenity IN ('school', 'college', 'university', 'bus_station',
	                                   'ferry_terminal', 'hospital', 'kindergarten',
	                                   'place_of_worship', 'public_building', 'townhall')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS civic
template = postgis_conn_5

[coastline_10m__shore]
table = coastline_10m
template = postgis_conn_1

[continent_labels_]
table = continents
template = postgis_conn_3

[country_labels_110m_z3]
table = admin_0_countries_110m_points
template = postgis_conn_2

[country_labels_110m_z4]
table = admin_0_labels_z4
template = postgis_conn_2

[country_labels_110m_z5]
table = admin_0_labels_z5
template = postgis_conn_2

[country_labels_110m_z6]
table = admin_0_labels_z6
template = postgis_conn_2

[country_shapes_10m__shore]
table = admin_0_countries_10m
template = postgis_conn_1

[country_shapes_110m__shore]
table = admin_0_countries_110m
template = postgis_conn_1

[country_shapes_50m__shore]
table = admin_0_countries_50m
template = postgis_conn_1

[green_areas_hybrid_polygon_off]
table = (SELECT way,
	                        name,
	                        ST_Area(way) AS area,
	                        (CASE WHEN leisure IN ('park', 'water_park', 'marina',
	                                               'playground',
	                                               'garden', 'common') THEN 'park'
	                              WHEN amenity IN ('graveyard') THEN 'cemetery'
	                              WHEN landuse IN ('cemetery') THEN 'cemetery'
	                              WHEN leisure IN ('sports_centre', 'golf_course',
	                                               'stadium', 'track', 'pitch') THEN 'sport'
	                              WHEN landuse IN ('recreation_ground') THEN 'sport'
	                              WHEN landuse IN ('forest', 'wood') THEN 'forest'
	                         ELSE '' END) AS kind
	                 FROM planet_osm_polygon
	                 WHERE leisure IN ('park', 'water_park', 'marina',
	                                   'playground', 'garden', 'common')
	                    OR amenity IN ('graveyard')
	                    OR landuse IN ('cemetery')
	                    OR leisure IN ('sports_centre', 'golf_course', 'stadium',
	                                   'track', 'pitch')
	                    OR landuse IN ('recreation_ground')
	                    OR landuse IN ('forest', 'wood')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS greens
template = postgis_conn_0

[green_areas_labels_]
table = (SELECT way,
	                        name,
	                        ST_Area(way) AS area,
	                        (CASE WHEN leisure IN ('park', 'water_park', 'marina',
	                                               'nature_reserve', 'playground',
	                                               'garden', 'common') THEN 'park'
	                              WHEN amenity IN ('graveyard') THEN 'cemetery'
	                              WHEN landuse IN ('cemetery') THEN 'cemetery'
	                              WHEN leisure IN ('sports_centre', 'golf_course',
	                                               'stadium', 'track', 'pitch') THEN 'sport'
	                              WHEN landuse IN ('recreation_ground') THEN 'sport'
	                              WHEN landuse IN ('forest', 'wood') THEN 'forest'
	                         ELSE '' END) AS kind
	                 FROM planet_osm_polygon
	                 WHERE leisure IN ('park', 'water_park', 'marina', 'nature_reserve',
	                                   'playground', 'garden', 'common')
	                    OR amenity IN ('graveyard')
	                    OR landuse IN ('cemetery')
	                    OR leisure IN ('sports_centre', 'golf_course', 'stadium',
	                                   'track', 'pitch')
	                    OR landuse IN ('recreation_ground')
	                    OR landuse IN ('forest', 'wood')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS greens
template = postgis_conn_0

[green_areas_transparent_hybrid_polygon_off]
table = (SELECT way,
	                        name,
	                        ST_Area(way) AS area
	                 FROM planet_osm_polygon
	                        WHERE "leisure" IN ('nature_reserve')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS greens
template = postgis_conn_0

[lakes_10m__shore]
table = lakes_10m
template = postgis_conn_1

[lakes_110m__shore]
table = lakes_110m
template = postgis_conn_1

[lakes_50m__shore]
table = lakes_50m
template = postgis_conn_1

[land_]
table = coastline
template = postgis_conn_4

[land_shapes_110m__shore]
table = land_110m
template = postgis_conn_1

[major_road_labels_]
table = (SELECT way,
	                        (CASE WHEN highway = 'motorway'
	                              THEN ''
	                              ELSE name
	                              END) AS name,
	                        (CASE WHEN highway = 'motorway' AND CHAR_LENGTH(ref) BETWEEN 2 AND 15
	                              THEN REGEXP_REPLACE(ref, E'\s*;\s*', E' / ', 'g')
	                              ELSE ''
	                              END) AS ref,
	                        (CASE WHEN highway = 'motorway' AND CHAR_LENGTH(ref) BETWEEN 2 AND 15
	                              THEN CHAR_LENGTH(ref)
	                              ELSE 0
	                              END) AS ref_length,
	
	                        highway,
	                        ST_Length(way) AS length,
	
	                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
	                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
	                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
	                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
	                              WHEN highway = 'secondary' THEN 4
	                              WHEN highway = 'tertiary' THEN 5
	                              ELSE 9 END) AS priority,
	                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
	                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
	                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
	                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
	                              ELSE '' END) AS kind,
	                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                              ELSE 'no' END) AS is_tunnel,
	                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                              ELSE 'no' END) AS is_bridge
	
	                 FROM planet_osm_line
	
	                 WHERE highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
	
	                 ORDER BY priority ASC, length DESC)
	                 
	                 AS collected_lines
template = postgis_conn_0

[marine_labels_10m_]
table = (SELECT * FROM geography_marine_polys_10m ORDER BY ScaleRank ASC) AS marine_polys
template = postgis_conn_1

[marine_labels_110m_]
table = (SELECT * FROM geography_marine_polys_110m ORDER BY ScaleRank ASC) AS marine_polys
template = postgis_conn_1

[marine_labels_50m_]
table = (SELECT * FROM geography_marine_polys_50m ORDER BY ScaleRank ASC) AS marine_polys
template = postgis_conn_1

[minor_road_labels_]
table = (SELECT way,
	                        name,
	
	                        highway,
	                        ST_Length(way) AS length,
	
	                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
	                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
	                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
	                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
	                              WHEN highway = 'secondary' THEN 4
	                              WHEN highway = 'tertiary' THEN 5
	                              ELSE 9 END) AS priority,
	                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
	                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
	                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
	                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
	                              ELSE '' END) AS kind,
	                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
	                              ELSE 'no' END) AS is_tunnel,
	                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
	                              ELSE 'no' END) AS is_bridge
	
	                 FROM planet_osm_line
	
	                 WHERE highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
	
	                 ORDER BY priority ASC, length DESC)
	                 
	                 AS collected_lines
template = postgis_conn_0

[motorways_z9_]
geometry_field = way_zoom9
table = planet_osm_motorways
template = postgis_conn_4

[ne_10m_admin_0_boundary_lines_land__country_boundary_10m]
table = ne_10m_admin_0_boundary_lines_land
template = postgis_conn_3

[ne_10m_admin_0_boundary_lines_land__country_boundary_10m_whiteout]
table = ne_10m_admin_0_boundary_lines_land
template = postgis_conn_3

[osm_place_points]
table = (SELECT *,
	                        COALESCE(z_order, 0) AS coalesced_z_order,
	                        (CASE WHEN place = 'city' THEN 0
	                              WHEN place = 'town' THEN 1
	                              WHEN place = 'village' THEN 2
	                              ELSE 3 END) AS priority
	                 FROM planet_osm_point
	                 WHERE place IN ('city', 'town', 'hamlet', 'village')
	                 ORDER BY priority ASC, coalesced_z_order DESC
	                ) AS places
template = postgis_conn_0

[parking_areas_]
table = (SELECT way,
	                        name
	                 FROM planet_osm_polygon
	                 WHERE amenity IN ('parking')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS parking
template = postgis_conn_5

[poi_station_labels_]
table = (SELECT way,
	                        name,
	                        railway,
	                        highway
	                 FROM planet_osm_point
					 WHERE "railway" IN ('station') OR
						"highway" IN ('bus_stop')
	                 ORDER BY z_order ASC, way DESC
	                
	                ) AS poi
template = postgis_conn_0

[postgis_conn_0]
dbname = planet_osm
estimate_extent = false
extent = -20037508,-20037508,20037508,20037508
host = localhost
layer_srs = %(srs3)s
password = None
port = 5432
type = postgis
user = osm

[postgis_conn_1]
dbname = naturalearth1.1_merc
estimate_extent = false
extent = -20037508,-20037508,20037508,20037508
host = localhost
layer_srs = %(srs3)s
password = None
type = postgis
user = nev

[postgis_conn_2]
dbname = toner
estimate_extent = false
host = localhost
layer_srs = %(srs3)s
password = None
port = 5432
type = postgis
user = osm

[postgis_conn_3]
dbname = toner
estimate_extent = false
host = localhost
layer_srs = %(srs4)s
password = None
port = 5432
type = postgis
user = osm

[postgis_conn_4]
dbname = planet_osm
estimate_extent = false
extent = -20037508,-20037508,20037508,20037508
host = localhost
layer_srs = %(srs3)s
password = None
type = postgis
user = osm

[postgis_conn_5]
dbname = planet_osm
extent = -20037508,-20037508,20037508,20037508
host = localhost
layer_srs = %(srs3)s
password = None
port = 5432
type = postgis
user = osm

[water_bodies_]
table = (SELECT way,
	                        ST_Area(way) AS area
	                 FROM planet_osm_polygon
	                 WHERE "natural" IN ('water', 'bay')
	                    OR waterway IN ('riverbank')
	                    OR landuse IN ('reservoir')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS water
template = postgis_conn_0

[water_bodies_labels]
table = (SELECT way,
	                        name,
	                        ST_Area(way) AS area,
	                        (CASE WHEN "natural" IN ('water', 'bay') THEN 'sea'
	                              WHEN waterway IN ('riverbank') THEN 'river'
	                              WHEN landuse IN ('reservoir') THEN 'lake'
	                         ELSE '' END) AS kind
	                 FROM planet_osm_polygon
	                 WHERE "natural" IN ('water', 'bay')
	                    OR waterway IN ('riverbank')
	                    OR landuse IN ('reservoir')
	                 ORDER BY z_order ASC, way_area DESC
	                
	                ) AS water
template = postgis_conn_0

[z10_roads__roads]
table = planet_osm_line_z10
template = postgis_conn_0

[z11_roads__roads]
table = planet_osm_line_z11
template = postgis_conn_0

[z12_roads__roads]
table = planet_osm_line_z12
template = postgis_conn_0

[z13_roads__roads]
table = planet_osm_line_z13
template = postgis_conn_0

[z14_roads__roads]
table = planet_osm_line_z14
template = postgis_conn_0

[z15plus_roads__roads]
table = planet_osm_line_z15plus
template = postgis_conn_0

